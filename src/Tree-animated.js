/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/tree-animated.glb')
  const { actions } = useAnimations(animations, group)
  useEffect(() => {
    actions["pCube12|Take 001|BaseLayer.001"].play();
    actions["pCube13|Take 001|BaseLayer.001"].play();
    actions["pCube14|Take 001|BaseLayer.001"].play();
    actions["pCube15|Take 001|BaseLayer.001"].play();
    actions["pCube16|Take 001|BaseLayer.001"].play();
  });
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="polySurface3" geometry={nodes.polySurface3.geometry} material={materials['Material.001']} rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
        <mesh name="pCube12" geometry={nodes.pCube12.geometry} material={materials['Material.002']} rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
        <mesh name="pCube13" geometry={nodes.pCube13.geometry} material={materials['Material.002']} rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
        <mesh name="pCube14" geometry={nodes.pCube14.geometry} material={materials['Material.002']} rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
        <mesh name="pCube15" geometry={nodes.pCube15.geometry} material={materials['Material.002']} rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
        <mesh name="pCube16" geometry={nodes.pCube16.geometry} material={materials['Material.002']} rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
      </group>
    </group>
  )
}

useGLTF.preload('/tree-animated.glb')
